1. Создание комнаты.
POST /room
Тело запроса
{
  idOfAdmin: number;
  usernameOfAdmin: string;
  game: string; //current - 'codeOfTanks'
  nameOfRoom: string;
  countOfPlayers: number;
  heightOfMapForGame: number;
  widthOfMapForGame: number;
  // next, if we with selecting level;
  // levelType: string; // 'tileGrass1', 'tileGrass2', 'tileSand1', 'tileSand2', 'tileSand3'
}

Тело Ответа {
  idOfRoom: number;
  game: string; //current - 'codeOfTanks'
  nameOfRoom: string;
  idOfAdmin: number;
  usernameOfAdmin: string;
  countOfPlayers: number;
  heightOfMapForGame: number;
  widthOfMapForGame: number;
}

=========

2. Инвайт игрока в лобби
PUT /invite-user
Тело запроса
{
  username: string;
  idOfRoom: number;
}
Тело Ответа
{
  id: number;
  email: string;
  username: string;
  idOfRoom: number;
}
==========

3 Проверить, готовы ли игроки к игре
GET /game-status?idOfRoom={3423}
Возвращать массив всех игроков и их статус. Если сложно посчитать - можно договориться
о запросе по одному юзеру, но количество запросов, значительно возрастет.
Тело ответа
{
  users: [User];
}

User {
  idOfUser: number;
  username: string;
  email: string;
  readyToPlay: number; //0, 1, 2
  chosenTank?: string | null;
  idOfRoom: number;
  // could be
}

=======
4.  Получить стратегии юзера
GET user/strategies?game=codeOfTanks&idOfRoom={32423}

export interface IGetUserStrategiesResponse {
  strategies: [Strategy];
}

Strategy {
  id: number;
  name: string;
}

========
5. Подтверждение, что юзер готов к бою
PUT /user-ready
Тело запроса:
{
    username: string;
  idOfChosenStrategy: number;
  idOfRoom: number;
  chosenTank: string;
  // could be 'tank_green', 'tank_red', ' tank_sand', 'tank_blue', 'tank_dark'
}

Тело ответа:
{
  status: true;
  username: string;
  idOfChosenStrategy: number;
  idOfRoom: number;
  chosenTank: string;
  // could be 'tank_green', 'tank_red', ' tank_sand', 'tank_blue', 'tank_dark'
}
=======
6. Запустить игру (может только админ)
GET /game/start

=======
7. Получить количество новых инвайтов, которые, есть у юзера
GET /notification-new

Тело ответа:
{
    countOfNotifications: number;
}
========
8. Получить список инвайтов
При получении запроса обнулять количество новых уведомлений
GET /notification
Тело ответа:
{
    invite: [Invite];
}

Invite {
  idOfInvite: number;
  idOfRoom: number;
  nameOfRoom: string;
  idOfAdmin: number;
  usernameOfAdmin: string;
  emailOfAdmin: number;
  countOfPlayers: number;
  heightOfMapForGame: number;
  widthOfMapForGame: number;
}
=========
9. Получить текущих игроков в лобби
GET /game/users?idOfRoom={23324}

Тело ответа
{
users: [User];
}

 User {
  idOfUser: number;
  username: string;
  email: string;
  choosenTank: string;
  readyToPlay: number; // 0, 1 ,2
  idOfRoom: number;
}

==========
10. Узнать началась ли игра

GET /game/is-started?idOfRoom={32423}

Тело ответа
{
  status: boolean;
  idOfRoom: number;
}

=========
///////
11. Удалить уведомление
DELETE /invite-user?idOfInvite={234}&username={Dima}

Тело ответа{
status: boolean;
}

====
12. Принять уведомление
POST /accept-invite
Тело запроса{
    username: string;
    idOfInvite: string;
}

Тело ответа{
  idOfInvite: number;
  idOfRoom: number;
  nameOfRoom: string;
  idOfAdmin: number;
  usernameOfAdmin: string;
  countOfPlayers: number;
  heightOfMapForGame: number;
  widthOfMapForGame: number;
}

====
13. Удалить админом игрока из лобби

DELETE /invite-user?idOfUser={253}&idOfRoom={3435}

Тело ответа
{
  status: boolean;
  idOfDeletedUser: number;
  idOfRoom: number;
}
====
14. Выйти из лобби
PUT game/exit

Тело запроса
{
  idOfUser: number;
  idOfRoom: number;
  username: string;
}

Тело ответа
{
  status: boolean;
  idOfRoom: number;
}
=========
////
